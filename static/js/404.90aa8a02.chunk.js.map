{"version":3,"file":"static/js/404.90aa8a02.chunk.js","mappings":"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","sources":["pages/CurrentMoviePage/currentMoviePage.styled.js","pages/CurrentMoviePage/videos/Video.styled.js","pages/CurrentMoviePage/videos/Video.jsx","pages/CurrentMoviePage/currentMoviePage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MoviePageContainer = styled.div`\n  margin-top: 20px;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  @media screen and (min-width: 768px) {\n    align-items: start;\n    flex-direction: row;\n  }\n\n  @media screen and (min-width: 1440px) {\n  }\n`;\n\nexport const Description = styled.div`\n  margin-top: 20px;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  @media screen and (min-width: 768px) {\n    margin-left: 40px;\n  }\n\n  @media screen and (min-width: 1440px) {\n  }\n`;\n\nexport const MovieLargeImageItem = styled.img`\n  @media screen and (min-width: 768px) {\n    height: 600px;\n  }\n  height: 550px;\n  border-radius: 2%;\n`;\n\nexport const MoviePageNavigation = styled.nav`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n`;\n\nexport const Timer = styled.div`\n  position: absolute;\n  top: 30px;\n  left: 280px;\n  display: flex;\n  width: 60px;\n  height: 60px;\n  font-size: 20px;\n  border: 3px solid transparent;\n  border-radius: 50%;\n  color: coral;\n  justify-content: center;\n  align-items: center;\n  background: linear-gradient(#222, #222) content-box no-repeat,\n    conic-gradient(\n        coral ${props => props.circlepersentage * 10}%,\n        0,\n        transparent\n      )\n      border-box;\n\n  z-index: 1;\n\n  @media screen and (min-width: 768px) {\n    top: 20px;\n    left: 310px;\n    border: 2px solid transparent;\n  }\n`;\n\nexport const MovieImageWrapper = styled.div`\n  position: relative;\n`;\n\nexport const PageContainer = styled.div`\n  overflow: hidden;\n  padding: 0 30px 0 30px;\n`;\n\nexport const MovieTitle = styled.a`\n  font-size: 50px;\n  font-weight: 600;\n  display: block;\n\n  margin-bottom: 40px;\n`;\n\nexport const GenresContainer = styled.ul`\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  align-items: center;\n`;\nexport const GenresItem = styled.li`\n  margin: 10px;\n  &:first-child {\n    margin-left: 0;\n  }\n  border: 1px solid #222;\n  border-radius: 10px;\n  padding: 8px;\n  opacity: 0.5;\n  background-color: rgba(34, 34, 34, 0.2);\n`;\n\nexport const FinishedButton = styled.button`\n  color: pink;\n  padding: 0;\n  font: inherit;\n  font-size: 20px;\n  cursor: pointer;\n  border: none;\n  padding: 15px;\n  background-color: #222;\n  border-radius: 10px;\n  transition: color 0.2s ease;\n  transition: background-color 0.2s ease;\n\n  width: 100%;\n  height: 50px;\n  display: block;\n  margin-bottom: 10px;\n  margin-top: 10px;\n\n  &:hover,\n  &:focus {\n    color: #222;\n    background-color: coral;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const VideoFrame = styled.iframe`\n\n    width:100%-20px;\n    height:350px;\n    margin-top:0;\n    display:border-box;\n\n    border: 10px solid #222;\n    border-radius:10px;\n    border-top-left-radius:0;\n\n\n`;\n\nexport const WatchTrailerButton = styled.button`\n  \n  color: ${props => props.buttonactive ? \"pink\" : \"#222\"};\n  border: none;\n  padding: 0;\n  font: inherit;\n  font-size:20px;\n  cursor: pointer;\n  outline: inherit;\n  padding:15px;\n  background-color: ${props => props.buttonactive ? \"#222\" : \"coral\"};\n  border-radius: 10px;\n  border-bottom-left-radius: ${props => props.buttonactive ? \"0\" : \"10px\"};\n  border-bottom-right-radius: ${props => props.buttonactive ? \"0\" : \"10px\"};\n  transition: color 0.2s ease;\n  transition: background-color 0.2s ease;\n\n  width: 140px;\n  height: 50px;\n  display: block;\n\n&:hover,\n  &:focus {\n    color: ${props => props.buttonactive ? \"#222\" : \"pink\"};\n    background-color: ${props => props.buttonactive ? \"coral\" : \"#222\"};\n  }\n\n`;\n","import { useState } from 'react';\nimport { selectVideos } from '../../../redux/currentMovie/currentMovieSelectors';\nimport { useSelector } from 'react-redux';\n\nimport { VideoFrame, WatchTrailerButton } from './Video.styled';\n\nconst Video = () => {\n  const video = useSelector(selectVideos);\n  const [watchButton, setWatchButton] = useState(false);\n\n  const watchButtonOnClick = () => {\n    setWatchButton(!watchButton);\n  };\n\n  return (\n    <>\n      <WatchTrailerButton\n        onClick={watchButtonOnClick}\n        buttonactive={watchButton}\n      >\n        Watch trailer\n      </WatchTrailerButton>\n      {video && watchButton ? (\n        video\n          .filter(\n            video =>\n              !video.name.includes('removed') &&\n              video.name === 'Official Trailer'\n          )\n          .map(video => {\n            return (\n              <VideoFrame\n                title={video.name}\n                key={video.id}\n                src={`https://www.youtube.com/embed/${video.key}`}\n              ></VideoFrame>\n            );\n          })\n      ) : (\n        <></>\n      )}\n    </>\n  );\n};\n\nexport default Video;\n","import { Outlet, NavLink, useParams } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport {\n  getDetails,\n  getVideos,\n} from '../../redux/currentMovie/currentMovieOperations';\nimport { selectDetails } from '../../redux/currentMovie/currentMovieSelectors';\nimport {\n  MoviePageContainer,\n  MovieTitle,\n  MovieLargeImageItem,\n  MoviePageNavigation,\n  Description,\n  Timer,\n  PageContainer,\n  MovieImageWrapper,\n  GenresItem,\n  GenresContainer,\n  FinishedButton\n} from './currentMoviePage.styled';\nimport Video from './videos';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectIsLoggedIn } from '../../redux/auth/authSelectors';\n//import { selectUser } from '../../redux/auth/authSelectors';\n//import { selectUserMovies } from '../../redux/userMovies/userMoviesSelectors';\nimport { addMovieToList, getUserMovies } from '../../redux/userMovies/userMoviesOperations';\n\nconst CurrentMoviePage = ({ movie }) => {\n  const dispatch = useDispatch();\n  const details = useSelector(selectDetails);\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  //const user = useSelector(selectUser);\n  //const movies = useSelector(selectUserMovies);\n  const routeParams = useParams();\n\n  useEffect(() => {\n    dispatch(getDetails({ id: routeParams.id, type: routeParams.type }));\n    dispatch(getVideos({ id: routeParams.id, type: routeParams.type }));\n  }, [dispatch, routeParams.id, routeParams.type]);\n\n  const addToList = ({ target }) => {\n\n    dispatch(getUserMovies);\n    switch (target.name) {\n      case \"favorite\": {\n        dispatch(addMovieToList({\n          globalId: details.id + \"\",\n          name: details.name ? details.name : details.title,\n          poster: details.backdrop_path,\n          status: target.name,\n          media_type: routeParams.type,\n        }));\n        break;\n      }\n      case \"dropped\": {\n        break;\n      }\n      case \"watching\": {\n        break;\n      }\n      case \"finished\": {\n        break;\n      }\n      default: return;\n    }\n\n  }\n\n  return (\n    <PageContainer>\n      {details && (\n        <MoviePageContainer>\n          <div>\n            <MovieImageWrapper>\n              <Timer circlepersentage={details.vote_average}>\n                {details.vote_average}\n              </Timer>\n              <MovieLargeImageItem\n                src={`https://image.tmdb.org/t/p/w500${details.poster_path}?api_key=${process.env.KEY}`}\n                alt={details.name ?? details.title}\n              />\n            </MovieImageWrapper>\n            {isLoggedIn && <div>\n              <FinishedButton name=\"favorite\" onClick={addToList}>Favorite</FinishedButton>\n              <FinishedButton name=\"watching\" onClick={addToList}>Watching</FinishedButton>\n              <FinishedButton name=\"finished\" onClick={addToList}>Finished</FinishedButton>\n              <FinishedButton name=\"dropped\" onClick={addToList}>Dropped</FinishedButton>\n            </div>}\n          </div>\n\n\n\n          <Description>\n            <MovieTitle>{details.name ?? details.title}</MovieTitle>\n            {details && (\n              <GenresContainer>\n                {details.genres.map(genre => {\n                  return <GenresItem key={genre.id}>{genre.name}</GenresItem>;\n                })}\n              </GenresContainer>\n            )}\n            <p>{details.overview}</p>\n            <p>Language: {details.original_language}</p>\n            <p>First air date: {details.first_air_date}</p>\n            <p>Country: {details.origin_country}</p>\n            <p>Popularity: {details.popularity}</p>\n            <p>Vote average: {details.vote_average}</p>\n            <Video></Video>\n            <MoviePageNavigation>\n              <NavLink className=\"movie-links-item\" to={'cast'}>\n                <h3>Cast</h3>\n              </NavLink>\n              <NavLink className=\"movie-links-item\" to={'reviews'}>\n                <h3>Reviews</h3>\n              </NavLink>\n            </MoviePageNavigation>\n            <Outlet />\n          </Description>\n        </MoviePageContainer>\n      )}\n\n      <button>Show similar</button>\n    </PageContainer>\n  );\n};\n\nexport default CurrentMoviePage;\n"],"names":["MoviePageContainer","styled","Description","MovieLargeImageItem","MoviePageNavigation","Timer","props","circlepersentage","MovieImageWrapper","PageContainer","MovieTitle","GenresContainer","GenresItem","FinishedButton","VideoFrame","WatchTrailerButton","buttonactive","video","useSelector","selectVideos","useState","watchButton","setWatchButton","onClick","filter","name","includes","map","title","src","key","id","movie","dispatch","useDispatch","details","selectDetails","isLoggedIn","selectIsLoggedIn","routeParams","useParams","useEffect","getDetails","type","getVideos","addToList","target","getUserMovies","addMovieToList","globalId","poster","backdrop_path","status","media_type","vote_average","poster_path","process","KEY","alt","genres","genre","overview","original_language","first_air_date","origin_country","popularity","className","to"],"sourceRoot":""}