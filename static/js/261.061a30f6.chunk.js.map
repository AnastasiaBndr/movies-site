{"version":3,"file":"static/js/261.061a30f6.chunk.js","mappings":"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","sources":["redux/currentMovie/currentMovieSelectors.js","CurrentMoviePage/currentMoviePage.styled.js","CurrentMoviePage/videos/Video.styled.js","CurrentMoviePage/videos/Video.jsx","CurrentMoviePage/currentMoviePage.jsx"],"sourcesContent":["\nexport const selectVideos = state => state.currentMovie.videos;\nexport const selectCast = state => state.currentMovie.cast;\nexport const selectDetails = state => state.currentMovie.details;\nexport const selectIsFetching = state => state.currentMovie.isFetching;\nexport const selectIsLoading = state => state.currentMovie.isLoading;\nexport const selectError = state => state.currentMovie.error;\n","import styled from 'styled-components';\n\nexport const MoviePageContainer = styled.div`\n  margin-top: 20px;\n  display: flex;\n`;\n\nexport const Description = styled.div`\n  margin-left: 40px;\n`;\n\nexport const MovieLargeImageItem = styled.img`\n  height: 600px;\n`;\n\nexport const MoviePageNavigation = styled.nav`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n`;\n\nexport const GoBackButton = styled.button`\n  display: block;\n  background: none;\n  color: pink;\n  border: none;\n  padding: 0;\n  font: inherit;\n  cursor: pointer;\n  outline: inherit;\n  background-color: #222;\n  border-radius: 20px;\n  padding: 15px;\n\n  transition: color 0.2s ease;\n  transition: background-color 0.2s ease;\n  margin-top: 20px;\n\n  &:hover,\n  &:focus {\n    color: #222;\n    background-color: coral;\n  }\n`;\n\nexport const Timer = styled.div`\n  position: absolute;\n  width: 50px;\n  height: 50px;\n  border: 0.5vh solid #222;\n  border-radius: 50%;\n\n  z-index: 1;\n`;\n\nexport const PageContainer = styled.div`\n  overflow: hidden;\n`;\n","import styled from 'styled-components';\n\nexport const VideoList = styled.ul`\n    list-style-type:none;\n\n    height:200px;\n    overflow:auto;\n\n    display:flex;\n    flex-wrap:wrap;\n`;\n\nexport const VideoFrame = styled.iframe`\n    width:200px;\n    display:block;\n    margin:5px;\n`;","import { useEffect } from 'react';\nimport { getVideos } from '../../redux/currentMovie/currentMovieOperations';\nimport { selectVideos } from '../../redux/currentMovie/currentMovieSelectors';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { VideoList, VideoFrame } from './Video.styled';\n\nconst Video = ({ currentMovie }) => {\n  const dispatch = useDispatch();\n  const video = useSelector(selectVideos);\n\n  useEffect(() => {\n    if (currentMovie.media_type === 'movie') {\n      dispatch(getVideos({ id: currentMovie.id, type: 'movie' }));\n    } else if (currentMovie.media_type === 'tv') {\n      dispatch(getVideos({ id: currentMovie.id, type: 'tv' }));\n    }\n  }, [currentMovie.id, dispatch, currentMovie.media_type]);\n\n  return (\n    <>\n      <VideoList className=\"videos-container\">\n        {video ? (\n          video\n            .filter(video => video.name.includes('removed') !== true)\n            .map(video => {\n              return (\n                <li className=\"video-item\" key={video.id}>\n                  <VideoFrame\n                    title={video.name}\n                    src={`https://www.youtube.com/embed/${video.key}`}\n                  ></VideoFrame>\n                </li>\n              );\n            })\n        ) : (\n          <p>No videos yet..</p>\n        )}\n      </VideoList>\n    </>\n  );\n};\n\nexport default Video;\n","import { Outlet, Link, useLocation, NavLink } from 'react-router-dom';\nimport { useEffect, useRef, useState } from 'react';\nimport { getDetails } from '../redux/currentMovie/currentMovieOperations';\nimport { selectDetails } from '../redux/currentMovie/currentMovieSelectors';\nimport {\n  MoviePageContainer,\n  GoBackButton,\n  MovieLargeImageItem,\n  MoviePageNavigation,\n  Description,\n  Timer,\n  PageContainer,\n} from './currentMoviePage.styled';\nimport Video from './videos';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst CurrentMoviePage = ({ movie }) => {\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/search');\n  const [currentMovie, setCurrentMovie] = useState(movie);\n  const dispatch = useDispatch();\n  const details = useSelector(selectDetails);\n\n  useEffect(() => {\n    var localMovie;\n    if (localStorage.getItem('current_movie') !== null) {\n      localMovie = JSON.parse(localStorage.getItem('current_movie'));\n      setCurrentMovie(localMovie);\n\n      if (localMovie.media_type === 'tv')\n        dispatch(getDetails({ id: localMovie.id, type: 'tv' }));\n      else if (localMovie.media_type === 'movie')\n        dispatch(getDetails({ id: localMovie.id, type: 'movie' }));\n    }\n  }, [setCurrentMovie, dispatch]);\n\n  console.log(details);\n\n  return (\n    <PageContainer>\n      <Link to={backLinkLocationRef.current}>\n        <GoBackButton>Go back</GoBackButton>\n      </Link>\n      <MoviePageContainer>\n        <div>\n          <Timer>{currentMovie.vote_average}</Timer>\n          <MovieLargeImageItem\n            src={`https://image.tmdb.org/t/p/w500${currentMovie.poster_path}?api_key=${process.env.KEY}`}\n            alt={currentMovie.name ?? currentMovie.title}\n          />\n        </div>\n\n        <Description>\n          <h1>\n            {currentMovie.name ?? currentMovie.title} /{' '}\n            {currentMovie.original_name ?? currentMovie.original_title}\n          </h1>\n          <p>{currentMovie.overview}</p>\n          <p>Language: {currentMovie.original_language}</p>\n          <p>First air date: {currentMovie.first_air_date}</p>\n          <p>Country: {currentMovie.origin_country}</p>\n          <p>Popularity: {currentMovie.popularity}</p>\n          <p>Vote average: {currentMovie.vote_average}</p>\n          <MoviePageNavigation>\n            <NavLink className=\"movie-links-item\" to={'cast'}>\n              <h3>Cast</h3>\n            </NavLink>\n            <NavLink className=\"movie-links-item\" to={'reviews'}>\n              <h3>Reviews</h3>\n            </NavLink>\n          </MoviePageNavigation>\n          <Outlet />\n          <Video currentMovie={currentMovie}></Video>\n        </Description>\n      </MoviePageContainer>\n    </PageContainer>\n  );\n};\n\nexport default CurrentMoviePage;\n"],"names":["selectVideos","state","currentMovie","videos","selectDetails","details","MoviePageContainer","styled","Description","MovieLargeImageItem","MoviePageNavigation","GoBackButton","Timer","PageContainer","VideoList","VideoFrame","dispatch","useDispatch","video","useSelector","useEffect","media_type","getVideos","id","type","className","filter","name","includes","map","title","src","key","movie","location","useLocation","backLinkLocationRef","useRef","from","useState","setCurrentMovie","localMovie","localStorage","getItem","JSON","parse","getDetails","console","log","to","current","vote_average","poster_path","process","KEY","alt","original_name","original_title","overview","original_language","first_air_date","origin_country","popularity"],"sourceRoot":""}