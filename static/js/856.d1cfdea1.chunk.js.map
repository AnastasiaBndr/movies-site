{"version":3,"file":"static/js/856.d1cfdea1.chunk.js","mappings":"6RAEaA,EAAYC,EAAAA,GAAAA,IAAH,4OAaTC,EAAWD,EAAAA,GAAAA,IAAH,sRAgBRE,EAAaF,EAAAA,GAAAA,IAAH,yYA6CVG,GArBkBH,EAAAA,GAAAA,IAAH,gYAqBJA,EAAAA,GAAAA,EAAH,iRAeRI,EAAWJ,EAAAA,GAAAA,EAAH,8OAwCRK,GA5BkBL,EAAAA,GAAAA,IAAH,mEAKAA,EAAAA,GAAAA,OAAH,8UAkBIA,EAAAA,GAAAA,IAAH,6EAKSA,EAAAA,GAAAA,IAAH,gDAInBM,EAAON,EAAAA,GAAAA,GAAH,sHAMJO,EAAWP,EAAAA,GAAAA,GAAH,4c,6BC5DrB,EA/DiB,WACf,IAAMQ,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,IAAYC,EAAAA,IAC1BC,GAAcC,EAAAA,EAAAA,MACdC,GAAaJ,EAAAA,EAAAA,IAAYK,EAAAA,GAEzBC,GAAWC,EAAAA,EAAAA,OACjBC,EAAAA,EAAAA,YAAU,WACR,IAAQC,EAAaP,EAAbO,SACRZ,GAASa,EAAAA,EAAAA,IAAe,CAAED,SAAUA,IAErC,GAAE,CAACZ,EAAUK,KAGdM,EAAAA,EAAAA,YAAU,WACJT,GACFF,GAASc,EAAAA,EAAAA,IAAcZ,GAC1B,GACG,CAACF,EAAUE,IAOf,OACEA,IACA,UAACX,EAAD,YACE,UAACE,EAAD,YACE,SAACI,EAAD,WACE,SAACH,EAAD,CAAYqB,KAAK,UAAjB,UACE,gBACEC,UACEC,oDAOR,SAACtB,EAAD,UAAWO,EAAYgB,QACvB,SAACtB,EAAD,UAAWM,EAAYU,eAIzB,SAACd,EAAD,UAxCgB,CAAC,WAAY,UAAW,WAAY,YAyCrCqB,KAAI,SAAAC,GACf,OACE,SAACrB,EAAD,CAAUsB,QAAS,kBA5BV,SAACD,GAClBX,EAAS,GAAD,OAAIW,GACb,CA0BkCE,CAAWF,EAAjB,EAAnB,SACGA,GAIN,MAEDf,EAAYkB,MACS,SAAC,KAAD,IADDhB,IAAc,SAAC,IAAD,CAAkBiB,OAAQjB,MAMnE,C","sources":["pages/UserPage/UserPage.styled.js","pages/UserPage/UserPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding: 40px 0 20px 0;\n\n  @media screen and (min-width: 768px) {\n    padding: 72px 0 38px 0;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding: 0 0 0 49px;\n    margin-block-start: 70px;\n  }\n`;\n\nexport const UserInfo = styled.div`\n  text-align: center;\n  margin-top: 40px;\n\n  @media screen and (min-width: 768px) {\n    max-width: 439px;\n    margin: 0 auto;\n    margin-top: 64px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    max-width: 439px;\n    margin: 0 auto;\n  }\n`;\n\nexport const UserAvatar = styled.svg`\n  width: 90px;\n  height: 90px;\n  border: 1px solid var(--accent-color);\n  border-radius: 50%;\n\n  background-color: #393939;\n  padding: 20px;\n\n  @media screen and (min-width: 768px) {\n    width: 150px;\n    height: 150px;\n\n    padding: 24px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 150px;\n    height: 150px;\n\n    padding: 24px;\n  }\n`;\n\nexport const AvatarContainer = styled.div`\n  display: inline-block;\n  width: 90px;\n  height: 90px;\n  img {\n    border-radius: 50%;\n    border: 1px solid var(--icon-color);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 150px;\n    height: 150px;\n    img {\n      width: 150px;\n      height: 150px;\n      border-radius: 50%;\n      border: 1px solid var(--icon-color);\n    }\n  }\n`;\n\nexport const UserName = styled.p`\n  margin-block-start: 31px;\n  margin-block-end: 4px;\n  font-weight: 400;\n  font-size: 18px;\n\n  @media screen and (min-width: 768px) {\n    margin-block-start: 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    font-size: 24px;\n  }\n`;\n\nexport const UserRole = styled.p`\n  margin-block-start: 0;\n  opacity: 0.5;\n  font-weight: 400;\n  font-size: 14px;\n  margin-bottom: 40px;\n  @media screen and (min-width: 768px) {\n    margin-block-start: 8px;\n    margin-block-end: 32px;\n  }\n`;\n\nexport const LogOutBtnWraper = styled.div`\n  display: flex;\n  justify-content: end;\n`;\n\nexport const LogOutButton = styled.button`\n  background: none;\n  /* color: var(--main-text-color); */\n  border: none;\n  padding: 0;\n  font-size: 14px;\n  line-height: 1.3;\n  cursor: pointer;\n  outline: inherit;\n  display: flex;\n  align-items: center;\n  margin-left: auto;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nexport const SvgLogoutIcon = styled.svg`\n  margin-left: 8px;\n  stroke: var(--accent-color);\n`;\n\nexport const ProfilePicContainer = styled.div`\n  position: relative;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  padding-inline-start: 0;\n`;\nexport const ListItem = styled.li`\n  display: block;\n  background: none;\n  color: pink;\n  border: none;\n  padding: 0;\n  font: inherit;\n  cursor: pointer;\n  outline: inherit;\n  background-color: #222;\n  border-radius: 20px;\n  padding: 15px;\n\n  transition: color 0.2s ease;\n  transition: background-color 0.2s ease;\n  margin-top: 20px;\n\n  &:hover,\n  &:focus {\n    color: #222;\n    background-color: coral;\n  }\n  list-style-type: none;\n  margin: 5px;\n`;\n","import { Outlet, useNavigate, useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { selectUser } from '../../redux/auth/authSelectors';\nimport { findByUserName } from '../../redux/auth/authOperations';\nimport { MoviesListScheme } from '../../components/Scheme/schemes';\nimport {\n  Container,\n  UserAvatar,\n  UserInfo,\n  UserName,\n  UserRole,\n  ProfilePicContainer,\n  List, ListItem\n} from './UserPage.styled';\nimport { getUserMovies } from '../../redux/userMovies/userMoviesOperations';\nimport { selectUserMovies } from '../../redux/userMovies/userMoviesSelectors';\n\nconst UserPage = () => {\n  const dispatch = useDispatch();\n  const currentUser = useSelector(selectUser);\n  const routeParams = useParams();\n  const userMovies = useSelector(selectUserMovies);\n  const listOptions = ['favorite', \"dropped\", \"watching\", 'finished'];\n  const navigate = useNavigate();\n  useEffect(() => {\n    const { username } = routeParams;\n    dispatch(findByUserName({ username: username }));\n\n  }, [dispatch, routeParams]);\n\n\n  useEffect(() => {\n    if (currentUser)\n      dispatch(getUserMovies(currentUser));\n  }\n    , [dispatch, currentUser]);\n\n  const chooseList = (option) => {\n    navigate(`${option}`);\n  }\n\n\n  return (\n    currentUser &&\n    <Container>\n      <UserInfo>\n        <ProfilePicContainer>\n          <UserAvatar fill=\"#494949\">\n            <use\n              xlinkHref={\n                process.env.PUBLIC_URL +\n                '/images/sprite.svg#icon-avatar'\n              }\n            ></use>\n          </UserAvatar>\n        </ProfilePicContainer>\n\n        <UserName>{currentUser.name}</UserName>\n        <UserRole>{currentUser.username}</UserRole>\n\n      </UserInfo>\n\n      <List>\n        {listOptions.map(option => {\n          return (\n            <ListItem onClick={() => chooseList(option)}>\n              {option}\n            </ListItem>\n\n          );\n        })}\n      </List>\n      {!routeParams.type ? (userMovies && <MoviesListScheme movies={userMovies}>\n      </MoviesListScheme>) : <Outlet />}\n\n\n    </Container>\n  );\n};\n\nexport default UserPage;\n"],"names":["Container","styled","UserInfo","UserAvatar","UserName","UserRole","ProfilePicContainer","List","ListItem","dispatch","useDispatch","currentUser","useSelector","selectUser","routeParams","useParams","userMovies","selectUserMovies","navigate","useNavigate","useEffect","username","findByUserName","getUserMovies","fill","xlinkHref","process","name","map","option","onClick","chooseList","type","movies"],"sourceRoot":""}