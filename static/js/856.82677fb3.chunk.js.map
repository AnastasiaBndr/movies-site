{"version":3,"file":"static/js/856.82677fb3.chunk.js","mappings":"0QAEaA,EAAYC,EAAAA,GAAAA,IAAH,4OAaTC,EAAWD,EAAAA,GAAAA,IAAH,sRAgBRE,EAAaF,EAAAA,GAAAA,IAAH,yYA6CVG,GArBkBH,EAAAA,GAAAA,IAAH,gYAqBJA,EAAAA,GAAAA,EAAH,iRAeRI,EAAWJ,EAAAA,GAAAA,EAAH,8OAwCRK,GA5BkBL,EAAAA,GAAAA,IAAH,mEAKAA,EAAAA,GAAAA,OAAH,8UAkBIA,EAAAA,GAAAA,IAAH,6EAKSA,EAAAA,GAAAA,IAAH,gDAInBM,EAAON,EAAAA,GAAAA,GAAH,sHAMJO,EAAWP,EAAAA,GAAAA,GAAH,4c,gDCtBrB,EAhGiB,WACf,IAAMQ,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,IAAYC,EAAAA,IAC1BC,GAAcC,EAAAA,EAAAA,MAEdC,GAAaJ,EAAAA,EAAAA,IAAYK,EAAAA,IAAqB,IACpDC,EAAAA,EAAAA,UAAQ,WACNT,GAASU,EAAAA,EAAAA,MACV,GAAE,CAACV,IAEJ,IAAMW,EAAc,CAClB,QAAS,CAAC,WAAY,UAAW,WAAY,YAC7C,SAAU,CAAC,mDAAY,uCAAU,+DAAc,2DAE3CC,GAAWC,EAAAA,EAAAA,MACXC,GAAWX,EAAAA,EAAAA,IAAYY,EAAAA,IAOvBC,EAAa,SAAAC,GACjB,OAAQA,GACN,IAAK,mDAEH,OADAL,EAAS,YACF,WAET,IAAK,uCAEH,OADAA,EAAS,WACF,UAET,IAAK,+DAEH,OADAA,EAAS,YACF,WAET,IAAK,yDAEH,OADAA,EAAS,YACF,WAET,QACEA,EAAS,GAAD,OAAIK,EAAOC,gBAExB,EAED,OACEhB,IACE,UAACX,EAAD,YACE,UAACE,EAAD,YACE,SAACI,EAAD,WACE,SAACH,EAAD,CAAYyB,KAAK,UAAjB,UACE,gBACEC,UACEC,oDAMR,SAAC1B,EAAD,UAAWO,EAAYoB,QACvB,SAAC1B,EAAD,UAAWM,EAAYqB,eAGzB,SAACzB,EAAD,UACgB,UAAbgB,EACGH,EAAY,SAASa,KAAI,SAAAP,GACvB,OACE,SAAClB,EAAD,CAAuB0B,QAAS,kBAAMT,EAAWC,EAAjB,EAAhC,SACGA,GADYA,EAIlB,IACDN,EAAY,UAAUa,KAAI,SAAAP,GACxB,OACE,SAAClB,EAAD,CAAuB0B,QAAS,kBAAMT,EAAWC,EAAjB,EAAhC,SACGA,GADYA,EAIlB,MAGLZ,EAAYqB,MAQZ,SAAC,KAAD,IAPAnB,IACE,SAAC,KAAD,CACEoB,SAnEK,SAAAC,GACf5B,GAAS6B,EAAAA,EAAAA,IAAoB,CAAEC,GAAIF,EAAMG,OACzC/B,GAASU,EAAAA,EAAAA,MACV,EAiEWsB,OAAQzB,MASrB,C","sources":["pages/UserPage/UserPage.styled.js","pages/UserPage/UserPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding: 40px 0 20px 0;\n\n  @media screen and (min-width: 768px) {\n    padding: 72px 0 38px 0;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding: 0 0 0 49px;\n    margin-block-start: 70px;\n  }\n`;\n\nexport const UserInfo = styled.div`\n  text-align: center;\n  margin-top: 40px;\n\n  @media screen and (min-width: 768px) {\n    max-width: 439px;\n    margin: 0 auto;\n    margin-top: 64px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    max-width: 439px;\n    margin: 0 auto;\n  }\n`;\n\nexport const UserAvatar = styled.svg`\n  width: 90px;\n  height: 90px;\n  border: 1px solid var(--accent-color);\n  border-radius: 50%;\n\n  background-color: #393939;\n  padding: 20px;\n\n  @media screen and (min-width: 768px) {\n    width: 150px;\n    height: 150px;\n\n    padding: 24px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 150px;\n    height: 150px;\n\n    padding: 24px;\n  }\n`;\n\nexport const AvatarContainer = styled.div`\n  display: inline-block;\n  width: 90px;\n  height: 90px;\n  img {\n    border-radius: 50%;\n    border: 1px solid var(--icon-color);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 150px;\n    height: 150px;\n    img {\n      width: 150px;\n      height: 150px;\n      border-radius: 50%;\n      border: 1px solid var(--icon-color);\n    }\n  }\n`;\n\nexport const UserName = styled.p`\n  margin-block-start: 31px;\n  margin-block-end: 4px;\n  font-weight: 400;\n  font-size: 18px;\n\n  @media screen and (min-width: 768px) {\n    margin-block-start: 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    font-size: 24px;\n  }\n`;\n\nexport const UserRole = styled.p`\n  margin-block-start: 0;\n  opacity: 0.5;\n  font-weight: 400;\n  font-size: 14px;\n  margin-bottom: 40px;\n  @media screen and (min-width: 768px) {\n    margin-block-start: 8px;\n    margin-block-end: 32px;\n  }\n`;\n\nexport const LogOutBtnWraper = styled.div`\n  display: flex;\n  justify-content: end;\n`;\n\nexport const LogOutButton = styled.button`\n  background: none;\n  /* color: var(--main-text-color); */\n  border: none;\n  padding: 0;\n  font-size: 14px;\n  line-height: 1.3;\n  cursor: pointer;\n  outline: inherit;\n  display: flex;\n  align-items: center;\n  margin-left: auto;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nexport const SvgLogoutIcon = styled.svg`\n  margin-left: 8px;\n  stroke: var(--accent-color);\n`;\n\nexport const ProfilePicContainer = styled.div`\n  position: relative;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  padding-inline-start: 0;\n`;\nexport const ListItem = styled.li`\n  display: block;\n  background: none;\n  color: pink;\n  border: none;\n  padding: 0;\n  font: inherit;\n  cursor: pointer;\n  outline: inherit;\n  background-color: #222;\n  border-radius: 20px;\n  padding: 15px;\n\n  transition: color 0.2s ease;\n  transition: background-color 0.2s ease;\n  margin-top: 20px;\n\n  &:hover,\n  &:focus {\n    color: #222;\n    background-color: coral;\n  }\n  list-style-type: none;\n  margin: 5px;\n`;\n","import { Outlet, useNavigate, useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useMemo } from 'react';\nimport { selectUser } from '../../redux/auth/authSelectors';\nimport {\n  Container,\n  UserAvatar,\n  UserInfo,\n  UserName,\n  UserRole,\n  ProfilePicContainer,\n  List,\n  ListItem,\n} from './UserPage.styled';\nimport {\n  deleteMovieFromList,\n  getUserMovies,\n} from '../../redux/userMovies/userMoviesOperations';\nimport { selectUserMovies } from '../../redux/userMovies/userMoviesSelectors';\n\nimport { UserFilteresListScheme } from 'components/Scheme/schemes';\nimport { selectLanguage } from '../../redux/global/globalSlice';\n\nconst UserPage = () => {\n  const dispatch = useDispatch();\n  const currentUser = useSelector(selectUser);\n  const routeParams = useParams();\n\n  const userMovies = useSelector(selectUserMovies) || [];\n  useMemo(() => {\n    dispatch(getUserMovies());\n  }, [dispatch]);\n\n  const listOptions = {\n    'en-US': ['Favorite', 'Dropped', 'Watching', 'Finished'],\n    'uk-UKR': ['Улюблене', 'Кинуте', 'Переглядаю', 'Завершено'],\n  };\n  const navigate = useNavigate();\n  const language = useSelector(selectLanguage);\n\n  const onDelete = movie => {\n    dispatch(deleteMovieFromList({ id: movie._id }));\n    dispatch(getUserMovies());\n  };\n\n  const chooseList = option => {\n    switch (option) {\n      case 'Улюблене': {\n        navigate('favorite');\n        return 'favorite';\n      }\n      case 'Кинуте': {\n        navigate('dropped');\n        return 'dropped';\n      }\n      case 'Переглядаю': {\n        navigate('watching');\n        return 'watching';\n      }\n      case 'Завершено': {\n        navigate('finished');\n        return 'finished';\n      }\n      default:\n        navigate(`${option.toLowerCase()}`);\n    }\n  };\n\n  return (\n    currentUser && (\n      <Container>\n        <UserInfo>\n          <ProfilePicContainer>\n            <UserAvatar fill=\"#494949\">\n              <use\n                xlinkHref={\n                  process.env.PUBLIC_URL + '/images/sprite.svg#icon-avatar'\n                }\n              ></use>\n            </UserAvatar>\n          </ProfilePicContainer>\n\n          <UserName>{currentUser.name}</UserName>\n          <UserRole>{currentUser.username}</UserRole>\n        </UserInfo>\n\n        <List>\n          {language === 'en-US'\n            ? listOptions['en-US'].map(option => {\n                return (\n                  <ListItem key={option} onClick={() => chooseList(option)}>\n                    {option}\n                  </ListItem>\n                );\n              })\n            : listOptions['uk-UKR'].map(option => {\n                return (\n                  <ListItem key={option} onClick={() => chooseList(option)}>\n                    {option}\n                  </ListItem>\n                );\n              })}\n        </List>\n\n        {!routeParams.type ? (\n          userMovies && (\n            <UserFilteresListScheme\n              onDelete={onDelete}\n              movies={userMovies}\n            ></UserFilteresListScheme>\n          )\n        ) : (\n          <Outlet />\n        )}\n      </Container>\n    )\n  );\n};\n\nexport default UserPage;\n"],"names":["Container","styled","UserInfo","UserAvatar","UserName","UserRole","ProfilePicContainer","List","ListItem","dispatch","useDispatch","currentUser","useSelector","selectUser","routeParams","useParams","userMovies","selectUserMovies","useMemo","getUserMovies","listOptions","navigate","useNavigate","language","selectLanguage","chooseList","option","toLowerCase","fill","xlinkHref","process","name","username","map","onClick","type","onDelete","movie","deleteMovieFromList","id","_id","movies"],"sourceRoot":""}