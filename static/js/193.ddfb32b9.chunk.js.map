{"version":3,"file":"static/js/193.ddfb32b9.chunk.js","mappings":"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","sources":["CurrentMoviePage/currentMoviePage.styled.js","CurrentMoviePage/videos/Video.styled.js","CurrentMoviePage/videos/Video.jsx","CurrentMoviePage/currentMoviePage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MoviePageContainer = styled.div`\n  margin-top: 20px;\n  \n\n  @media screen and (min-width: 768px) {\n    display:flex;\n  }\n\n  @media screen and (min-width: 1440px) {\n    \n  }\n`;\n\nexport const Description = styled.div`\n@media screen and (min-width: 768px) {\n  margin-left: 40px;\n  }\n\n  @media screen and (min-width: 1440px) {\n  }\n  \n`;\n\nexport const MovieLargeImageItem = styled.img`\n  height: 600px;\n  border-radius: 2%;\n\n`;\n\nexport const MoviePageNavigation = styled.nav`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n`;\n\nexport const Timer = styled.div`\n  position: absolute;\n  top: 20px;\n  left: 310px;\n  display: flex;\n  width: 60px;\n  height: 60px;\n  font-size: 20px;\n  border: 0.3vh solid transparent;\n  border-radius: 50%;\n  color: coral;\n  justify-content: center;\n  align-items: center;\n  background: linear-gradient(#222, #222) content-box no-repeat,\n    conic-gradient(\n        coral ${props => props.circlepersentage * 10}%,\n        0,\n        transparent\n      )\n      border-box;\n\n  z-index: 1;\n`;\n\nexport const MovieImageWrapper = styled.div`\n  position: relative;\n`;\n\nexport const PageContainer = styled.div`\n  overflow: hidden;\n  padding: 0 30px 0 30px;\n`;\n\nexport const MovieTitle = styled.a`\n  font-size: 50px;\n  font-weight: 600;\n  display: block;\n\n  margin-bottom: 40px;\n`;\n\nexport const GenresContainer = styled.ul`\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  align-items:center;\n`;\nexport const GenresItem = styled.li`\n  margin: 10px;\n  &:first-child {\n    margin-left: 0;\n  }\n  border: 1px solid #222;\n  border-radius: 10px;\n  padding: 8px;\n  opacity: 0.5;\n  background-color: rgba(34, 34, 34, 0.2);\n`;\n","import styled from 'styled-components';\n\nexport const VideoFrame = styled.iframe`\n\n    width:90%;\n    height:400px;\n    margin-top:0;\n\n    border: 10px solid #222;\n    border-radius:10px;\n    border-top-left-radius:0;\n\n\n`;\n\nexport const WatchTrailerButton = styled.button`\n  \n  color: ${props => props.buttonactive ? \"pink\" : \"#222\"};\n  border: none;\n  padding: 0;\n  font: inherit;\n  font-size:20px;\n  cursor: pointer;\n  outline: inherit;\n  padding:15px;\n  background-color: ${props => props.buttonactive ? \"#222\" : \"coral\"};\n  border-radius: 10px;\n  border-bottom-left-radius: ${props => props.buttonactive ? \"0\" : \"10px\"};\n  border-bottom-right-radius: ${props => props.buttonactive ? \"0\" : \"10px\"};\n  transition: color 0.2s ease;\n  transition: background-color 0.2s ease;\n\n  width: 140px;\n  height: 50px;\n  display: block;\n\n&:hover,\n  &:focus {\n    color: ${props => props.buttonactive ? \"#222\" : \"pink\"};\n    background-color: ${props => props.buttonactive ? \"coral\" : \"#222\"};\n  }\n\n`;\n","import { useState } from 'react';\nimport { selectVideos } from '../../redux/currentMovie/currentMovieSelectors';\nimport { useSelector } from 'react-redux';\n\nimport { VideoFrame, WatchTrailerButton } from './Video.styled';\n\nconst Video = () => {\n  const video = useSelector(selectVideos);\n  const [watchButton, setWatchButton] = useState(false);\n\n  const watchButtonOnClick = () => {\n    setWatchButton(!watchButton);\n  };\n\n  return (\n    <>\n      <WatchTrailerButton\n        onClick={watchButtonOnClick}\n        buttonactive={watchButton}\n      >\n        Watch trailer\n      </WatchTrailerButton>\n      {video && watchButton ? (\n        video\n          .filter(\n            video =>\n              !video.name.includes('removed') &&\n              video.name === 'Official Trailer'\n          )\n          .map(video => {\n            return (\n              <VideoFrame\n                title={video.name}\n                key={video.id}\n                src={`https://www.youtube.com/embed/${video.key}`}\n              ></VideoFrame>\n            );\n          })\n      ) : (\n        <></>\n      )}\n    </>\n  );\n};\n\nexport default Video;\n","import { Outlet, NavLink, useParams } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport {\n  getDetails,\n  getVideos,\n} from '../redux/currentMovie/currentMovieOperations';\nimport { selectDetails } from '../redux/currentMovie/currentMovieSelectors';\nimport {\n  MoviePageContainer,\n  MovieTitle,\n  MovieLargeImageItem,\n  MoviePageNavigation,\n  Description,\n  Timer,\n  PageContainer,\n  MovieImageWrapper,\n  GenresItem,\n  GenresContainer,\n} from './currentMoviePage.styled';\nimport Video from './videos';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst CurrentMoviePage = ({ movie }) => {\n  const dispatch = useDispatch();\n  const details = useSelector(selectDetails);\n  const routeParams = useParams();\n  console.log(routeParams);\n\n  useEffect(() => {\n    dispatch(getDetails({ id: routeParams.id, type: routeParams.type }));\n    dispatch(getVideos({ id: routeParams.id, type: routeParams.type }));\n  }, [dispatch, routeParams.id, routeParams.type]);\n\n  return (\n    <PageContainer>\n      {details && (\n        <MoviePageContainer>\n          <MovieImageWrapper>\n            <Timer circlepersentage={details.vote_average}>\n              {details.vote_average}\n            </Timer>\n            <MovieLargeImageItem\n              src={`https://image.tmdb.org/t/p/w500${details.poster_path}?api_key=${process.env.KEY}`}\n              alt={details.name ?? details.title}\n            />\n          </MovieImageWrapper>\n\n          <Description>\n            <MovieTitle>{details.name ?? details.title}</MovieTitle>\n            {details && (\n              <GenresContainer>\n                {details.genres.map(genre => {\n                  return <GenresItem key={genre.id}>{genre.name}</GenresItem>;\n                })}\n              </GenresContainer>\n            )}\n            <p>{details.overview}</p>\n            <p>Language: {details.original_language}</p>\n            <p>First air date: {details.first_air_date}</p>\n            <p>Country: {details.origin_country}</p>\n            <p>Popularity: {details.popularity}</p>\n            <p>Vote average: {details.vote_average}</p>\n            <Video></Video>\n            <MoviePageNavigation>\n              <NavLink className=\"movie-links-item\" to={'cast'}>\n                <h3>Cast</h3>\n              </NavLink>\n              <NavLink className=\"movie-links-item\" to={'reviews'}>\n                <h3>Reviews</h3>\n              </NavLink>\n            </MoviePageNavigation>\n            <Outlet />\n          </Description>\n        </MoviePageContainer>\n      )}\n\n      <button>Show similar</button>\n    </PageContainer>\n  );\n};\n\nexport default CurrentMoviePage;\n"],"names":["MoviePageContainer","styled","Description","MovieLargeImageItem","MoviePageNavigation","Timer","props","circlepersentage","MovieImageWrapper","PageContainer","MovieTitle","GenresContainer","GenresItem","VideoFrame","WatchTrailerButton","buttonactive","video","useSelector","selectVideos","useState","watchButton","setWatchButton","onClick","filter","name","includes","map","title","src","key","id","movie","dispatch","useDispatch","details","selectDetails","routeParams","useParams","console","log","useEffect","getDetails","type","getVideos","vote_average","poster_path","process","KEY","alt","genres","genre","overview","original_language","first_air_date","origin_country","popularity","className","to"],"sourceRoot":""}